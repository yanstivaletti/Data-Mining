# -*- coding: utf-8 -*-
"""Dimension Reduction Challenge Template.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rnvvuCgoq_pfkkZbkh3gMBit3U1sa7qq

#Libraries and data
"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/Data Mining for Business in Python 2021/5. Dimension Reduction

#import libraries
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.decomposition import PCA

#load the data
data = pd.read_csv('abalone-challenge.csv')
data.head()

"""#Data prep"""

#transform gender variable
data = pd.get_dummies(data, drop_first=True)
data.head()

#isolate X
X = data.drop(columns = 'Rings (+1.5=Years)')
X.head(1)

"""#Correlation Matrix

"""

import seaborn as sns
sns.heatmap(X.corr(),
            annot = True)

"""#PCA prep"""

#standardization
from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
X_scaled = pd.DataFrame(scaler.fit_transform(X))
X_scaled.head(2)

#determine optimal number of components
model = PCA(random_state=1502).fit(X_scaled)
plt.plot(model.explained_variance_ratio_)
plt.ylabel('Explained Variance')
plt.show()

"""#PCA"""

#PCA
model = PCA(n_components=3,
            random_state = 1502).fit(X_scaled)

#Interpretation
interpretation = pd.DataFrame(model.components_,
                              columns = X.columns)
interpretation

"""#Manifold Learning"""

#t-sNE
from sklearn.manifold import TSNE
model = TSNE(n_components = 2,
             random_state = 1502)
components = model.fit_transform(X)

#plotting
plt.scatter(components[:,0],
            components[:,1],
            cmap = "hsv",
            c = data["Rings (+1.5=Years)"])
plt.title("Manifold Learning")
plt.show()