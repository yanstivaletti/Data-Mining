# -*- coding: utf-8 -*-
"""Survival Analysis template.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aKCuC5w10ikfXtOBKGwR71JMYu81ikrw

#Libraries
"""

#!pip install lifelines

#libraries
import pandas as pd
import statsmodels.api as sm

"""#Data Prep"""

#import the dataset
dataset = sm.datasets.get_rdataset("lung",
                                   package = "survival").data
dataset.head()

#data organization
dataset.loc[dataset.status == 1, "status"] = 0
dataset.loc[dataset.status == 2, "status"] = 1

"""#Kaplan-Meyer estimator"""

#Kaplan-Meier Estimator
from lifelines import KaplanMeierFitter
model = KaplanMeierFitter()
model.fit(durations = dataset["time"], event_observed = dataset["status"])
model.event_table

#calculate for a specific event
day_13 = model.event_table.iloc[4, :]
surv_13 = (day_13.at_risk - day_13.observed) / day_13.at_risk
day_13
surv_13

"""# Visualization"""

#plotting survival
import matplotlib.pyplot as plt
model.plot(figsize = (8,6))
plt.title("Kaplan-Meyer")
plt.xlabel("Days")
plt.ylabel("Survival probability")

#plotting cumulated deaths
model.plot_cumulative_density(figsize = (8,6))
plt.title("Kaplan-Meyer - cumulated")
plt.xlabel("Days")
plt.ylabel("Death likelihood")

"""# Male vs Female Data prep"""

#Subsetting between male and female
Male = dataset.query("sex == 1")
Female = dataset.query("sex == 2")

#Kaplan Meier Estimator
model_m = KaplanMeierFitter()
model_m.fit(durations = Male["time"], event_observed = Male["status"])
model_f = KaplanMeierFitter()
model_f.fit(durations = Female["time"], event_observed = Female["status"])

#plotting
model_m.plot(figsize = (12,8))
model_f.plot()
plt.title("Kaplan-Meyer")
plt.xlabel("Days")
plt.ylabel("Survival probability")

#log rank test
from lifelines.statistics import logrank_test
logrank = logrank_test(durations_A = Male["time"],
                       durations_B = Female["time"],
                       event_observed_A = Male["status"],
                       event_observed_B = Female["status"])
print(logrank)